[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Welcome to GHRtools",
    "section": "",
    "text": "Our GHRsuite packages support climate and health workflows by streamlining health and climate data collection and harmonization, exploratory analysis, Bayesian modelling and forecasting."
  },
  {
    "objectID": "index.html#from-health-and-climate-data-to-disease-forecasts",
    "href": "index.html#from-health-and-climate-data-to-disease-forecasts",
    "title": "Welcome to GHRtools",
    "section": "",
    "text": "Our GHRsuite packages support climate and health workflows by streamlining health and climate data collection and harmonization, exploratory analysis, Bayesian modelling and forecasting."
  },
  {
    "objectID": "index.html#discover-our-tools",
    "href": "index.html#discover-our-tools",
    "title": "Welcome to GHRtools",
    "section": "Discover our tools",
    "text": "Discover our tools\n \n\n\n\n\n\n\n\n\n\n\n\n    data4health  \n  \n    \n        \n   Access, preprocess and aggregate of health data at customized spatiotemporal resolutions.\n   Use a set of functions to streamline health data pipelines or enjoy a user-friendly graphical interface provided as a Shiny app within the package.\n    \n    \n  \n\n\n\n  \n\n\n\n\n    clim4health  \n  \n     \n    \n  Obtain, transform and export climate data including reanalyses, forecasts, hindcasts, and weather stations.\n  Apply common transformations including postprocessing, and downscaling, spatiotemporal aggregations and threshold-based suitability indicators.\n    \n  \n  \n\n\n\n\n\n\n\n\n\n  \n\n\n\n\n\n\n\n\n\n\n    GHRexplore  \n  \n         \n    \n   Perform exploratory analysis of temporal and spatiotemporal health data including case counts, incidence rates, and covariates.\n   Produce high-quality time series, heatmaps, seasonality and bivariate plots and choropleth maps with many customization options.\n    \n  \n  \n\n\n\n  \n\n\n\n\n    GHRmodel  \n  \n         \n    \n   A modular and flexible approach to modeling health outcomes using INLA\n   It addresses common challenges when fitting INLA models, including covariate transformations, formula definitions with complex covariate effects, model fitting, and diagnostic plots and model statistics.\n\n    \n  \n  \n\n\n\n\n\n\n\n\n\n  \n\n\n\n\n\n\n\n\n\n\n    GHRpredict  \n  \n         \n    \n   Generate predictions of models fitted with GHRmodel.\n   Obtain out-of-sample statistics and diagnostics for case predictions and outbreak detection using cross-validation"
  },
  {
    "objectID": "docs/GHRpredict/GHRpredict.html",
    "href": "docs/GHRpredict/GHRpredict.html",
    "title": "Overview",
    "section": "",
    "text": "Under construction.\n\n\n\n Back to top"
  },
  {
    "objectID": "docs/GHRexplore/GHRexplore-vignette.html",
    "href": "docs/GHRexplore/GHRexplore-vignette.html",
    "title": "GHRexplore tutorial",
    "section": "",
    "text": "GHRexplore is an R package for exploratory analysis of temporal and spatiotemporal health data including case counts, incidence rates, and covariates. It provides commonly used visualizations and supports data transformations such as temporal and spatial aggregations. The package also offers extensive customization options for the resulting figures. The output of all functions is a ggplot2 object that can be further modified if needed.\n# Load GHRexplore\nlibrary(GHRexplore)\n\n# Other necessary libraries for the vignette\nlibrary(dplyr)\nlibrary(sf)\n\n\nThe data must be a long-format data frame containing a regularly spaced time series (e.g., daily, weekly, monthly) of a single or several spatial units. In this data frame, the time and optional space identifiers must be included as columns.\nAs an example, we can have a look at the dengue_MS dataset included in the package, which includes data on dengue cases from the Mato Grosso do Sul state in Brazil as well as a set of relevant covariates.\ndata(\"dengue_MS\")\nglimpse(dengue_MS)\n#&gt; Rows: 2,640\n#&gt; Columns: 27\n#&gt; $ micro_code      &lt;dbl&gt; 50001, 50002, 50003, 50004, 50005, 50006, 50007, 50008, 50009, 50010, 50011, 50001, 50002, 50003, 50004, 50005, 50006, 50007, 50008, 50009, 50010,…\n#&gt; $ micro_name      &lt;chr&gt; \"Baixo Pantanal\", \"Aquidauana\", \"Alto Taquari\", \"Campo Grande\", \"Cassilândia\", \"Paranaíba\", \"Três Lagoas\", \"Nova Andradina\", \"Bodoquena\", \"Dourado…\n#&gt; $ micro_name_ibge &lt;chr&gt; \"BAIXO PANTANAL\", \"AQUIDAUANA\", \"ALTO TAQUARI\", \"CAMPO GRANDE\", \"CASSILÂNDIA\", \"PARANAÍBA\", \"TRÊS LAGOAS\", \"NOVA ANDRADINA\", \"BODOQUENA\", \"DOURADO…\n#&gt; $ meso_code       &lt;dbl&gt; 5001, 5001, 5002, 5002, 5003, 5003, 5003, 5003, 5004, 5004, 5004, 5001, 5001, 5002, 5002, 5003, 5003, 5003, 5003, 5004, 5004, 5004, 5001, 5001, 50…\n#&gt; $ meso_name       &lt;chr&gt; \"Pantanais Sul Mato-Grossense\", \"Pantanais Sul Mato-Grossense\", \"Centro Norte De Mato Grosso Do Sul\", \"Centro Norte De Mato Grosso Do Sul\", \"Leste…\n#&gt; $ state_code      &lt;dbl&gt; 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50…\n#&gt; $ state_name      &lt;chr&gt; \"Mato Grosso Do Sul\", \"Mato Grosso Do Sul\", \"Mato Grosso Do Sul\", \"Mato Grosso Do Sul\", \"Mato Grosso Do Sul\", \"Mato Grosso Do Sul\", \"Mato Grosso D…\n#&gt; $ region_code     &lt;dbl&gt; 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5,…\n#&gt; $ region_name     &lt;chr&gt; \"Centre-West\", \"Centre-West\", \"Centre-West\", \"Centre-West\", \"Centre-West\", \"Centre-West\", \"Centre-West\", \"Centre-West\", \"Centre-West\", \"Centre-Wes…\n#&gt; $ biome_code      &lt;dbl&gt; 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 6, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 6, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 6, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 6, 3, 3, 2, 2, 2,…\n#&gt; $ biome_name      &lt;chr&gt; \"Pantanal\", \"Pantanal\", \"Cerrado\", \"Cerrado\", \"Cerrado\", \"Cerrado\", \"Cerrado\", \"Cerrado\", \"Cerrado\", \"Cerrado\", \"Atlantic Rainforest\", \"Pantanal\",…\n#&gt; $ ecozone_code    &lt;dbl&gt; 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 8, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 8, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 8, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 8, 3, 3, 2, 2, 2,…\n#&gt; $ ecozone_name    &lt;chr&gt; \"Pantanal\", \"Pantanal\", \"Cerrado\", \"Cerrado\", \"Cerrado\", \"Cerrado\", \"Cerrado\", \"Cerrado\", \"Cerrado\", \"Cerrado\", \"S Atlantic Rainforest\", \"Pantanal…\n#&gt; $ main_climate    &lt;chr&gt; \"AW\", \"AM\", \"AW\", \"AM\", \"AM\", \"AW\", \"AM\", \"AW\", \"AF\", \"CFA\", \"CFA\", \"AW\", \"AM\", \"AW\", \"AM\", \"AM\", \"AW\", \"AM\", \"AW\", \"AF\", \"CFA\", \"CFA\", \"AW\", \"AM\"…\n#&gt; $ month           &lt;dbl&gt; 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 5, 5, 5, 5, 5,…\n#&gt; $ year            &lt;dbl&gt; 2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000, 20…\n#&gt; $ time            &lt;dbl&gt; 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 5, 5, 5, 5, 5,…\n#&gt; $ dengue_cases    &lt;dbl&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA…\n#&gt; $ population      &lt;dbl&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA…\n#&gt; $ pop_density     &lt;dbl&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA…\n#&gt; $ tmax            &lt;dbl&gt; 34.28429, 33.15394, 32.31370, 31.23787, 31.19907, 32.12062, 31.67418, 31.42584, 33.35522, 31.53561, 31.59908, 33.37863, 32.83702, 32.13290, 31.537…\n#&gt; $ tmin            &lt;dbl&gt; 24.00583, 23.43257, 22.61425, 21.82709, 21.29000, 21.85358, 22.03971, 21.71142, 23.22608, 21.63477, 21.51721, 23.21109, 22.73544, 21.81151, 21.168…\n#&gt; $ pdsi            &lt;dbl&gt; -1.23299623, -1.85649669, -0.72018290, -2.39796877, -0.20565207, -1.50169408, -2.48268366, -3.26624393, -3.05362844, -3.60814834, -3.65085363, -1.…\n#&gt; $ urban           &lt;dbl&gt; 88.31, 72.36, 84.51, 94.71, 87.29, 85.58, 84.16, 78.50, 78.59, 81.81, 73.65, 88.31, 72.36, 84.51, 94.71, 87.29, 85.58, 84.16, 78.50, 78.59, 81.81,…\n#&gt; $ water_network   &lt;dbl&gt; 88.78, 79.59, 84.29, 88.13, 86.48, 65.80, 83.69, 81.68, 80.51, 77.45, 76.66, 88.78, 79.59, 84.29, 88.13, 86.48, 65.80, 83.69, 81.68, 80.51, 77.45,…\n#&gt; $ water_shortage  &lt;dbl&gt; 0.0000, 0.1528, 0.0437, 0.1855, 0.3201, 0.1921, 0.0524, 0.2444, 0.1247, 0.2095, 0.1419, 0.0000, 0.1528, 0.0437, 0.1855, 0.3201, 0.1921, 0.0524, 0.…\n#&gt; $ date            &lt;date&gt; 2000-01-01, 2000-01-01, 2000-01-01, 2000-01-01, 2000-01-01, 2000-01-01, 2000-01-01, 2000-01-01, 2000-01-01, 2000-01-01, 2000-01-01, 2000-02-01, 2…\nIn this data frame, the date column contains the temporal identifier (in this case, we have monthly data where the variable date represents the first day of the month) and the spatial unit identifier is micro_code.\nSince we have data for several spatial units, it is useful to have the polygon geometries of the areas (e.g., a geopackage, shapefile o geojson file), loaded as an sf object, in order to plot cartographic representations. The sf object must also contain the area unit identifier to be able to link the geometries with the data frame.\nFor the dengue_MS, the geometries are already included in the package in the map_MS object:\ndata(\"map_MS\")\nglimpse(map_MS)\n#&gt; Rows: 11\n#&gt; Columns: 2\n#&gt; $ code     &lt;dbl&gt; 50001, 50002, 50003, 50004, 50005, 50006, 50007, 50008, 50009, 50010, 50011\n#&gt; $ geometry &lt;MULTIPOLYGON [°]&gt; MULTIPOLYGON (((-55.60618 -..., MULTIPOLYGON (((-55.39862 -..., MULTIPOLYGON (((-53.68353 -..., MULTIPOLYGON (((-53.98856 -..., MULTIPOLYGON (((-53.07228…\nIn map_MS, the code variable corresponds to the micro_code area identifier in the dengue_MS object.\n\n💡 Tip: If you don’t have geometries for your data, a good place to look for them is GADM, natural earth, or GeoBoundaries.\n\n\n\n\nIn all GHRexplore functions, the column name of the variable to be plotted needs to be specified with the var argument. Plotting functions behave differently depending on the type of data being plotted as defined by the type argument: covariates (type='cov'), case counts (type='counts'), and incidence rates (type='inc'). Several examples for each type are provided in the following sections.\nTo plot incidence rates, the column with the disease counts must be used as var and the population must be also supplied as the pop argument. By default, rates are computed per 100,000 persons, but this number can be changed using the pt argument.\n\n\n\nMost GHRexplore functions support temporal and spatial aggregations from finer to coarser resolution. For example, you can aggregate daily to weekly data, or aggregate small regions to larger regions.\nTemporal and spatial aggregations are performed using the arguments aggregate_time and aggregate_space, respectively. For covariates (type='cov'), the aggregation function can be specified using aggregate_space_fun and aggregate_time_fun (options include mean (default), median, and sum). For case counts and incidence, the aggregation function is fixed to be the sum of cases.\n\n\n\nIn GHRexplore, color is controlled by the palette argument. We included a few in-house palettes that are used as defaults depending on the plot type:\nGHR_palettes()\n\nIn addition to these, all color palettes included in the packages RColorBrewer and colorspace can also be used. All available options can be checked by running RColorBrewer::display.brewer.all() and colorspace::hcl_palettes(plot=TRUE).\nAs a few examples, the ‘Blues’ palette can be useful when plotting precipitation-related variables, ‘Greens’ when plotting vegetation-related variables, or ‘Blue-Red’ when displaying temperature. When a single color is needed, a color in colors() or a hex code can also be specified. In addition, the user can provide custom palettes using a vector of hex codes to the palette argument.\n\n💡 Tip: Palettes can be reversed by preceding them with a minus sign, e.g. ‘-IDE1’."
  },
  {
    "objectID": "docs/GHRexplore/GHRexplore-vignette.html#data-requirements",
    "href": "docs/GHRexplore/GHRexplore-vignette.html#data-requirements",
    "title": "GHRexplore tutorial",
    "section": "",
    "text": "The data must be a long-format data frame containing a regularly spaced time series (e.g., daily, weekly, monthly) of a single or several spatial units. In this data frame, the time and optional space identifiers must be included as columns.\nAs an example, we can have a look at the dengue_MS dataset included in the package, which includes data on dengue cases from the Mato Grosso do Sul state in Brazil as well as a set of relevant covariates.\ndata(\"dengue_MS\")\nglimpse(dengue_MS)\n#&gt; Rows: 2,640\n#&gt; Columns: 27\n#&gt; $ micro_code      &lt;dbl&gt; 50001, 50002, 50003, 50004, 50005, 50006, 50007, 50008, 50009, 50010, 50011, 50001, 50002, 50003, 50004, 50005, 50006, 50007, 50008, 50009, 50010,…\n#&gt; $ micro_name      &lt;chr&gt; \"Baixo Pantanal\", \"Aquidauana\", \"Alto Taquari\", \"Campo Grande\", \"Cassilândia\", \"Paranaíba\", \"Três Lagoas\", \"Nova Andradina\", \"Bodoquena\", \"Dourado…\n#&gt; $ micro_name_ibge &lt;chr&gt; \"BAIXO PANTANAL\", \"AQUIDAUANA\", \"ALTO TAQUARI\", \"CAMPO GRANDE\", \"CASSILÂNDIA\", \"PARANAÍBA\", \"TRÊS LAGOAS\", \"NOVA ANDRADINA\", \"BODOQUENA\", \"DOURADO…\n#&gt; $ meso_code       &lt;dbl&gt; 5001, 5001, 5002, 5002, 5003, 5003, 5003, 5003, 5004, 5004, 5004, 5001, 5001, 5002, 5002, 5003, 5003, 5003, 5003, 5004, 5004, 5004, 5001, 5001, 50…\n#&gt; $ meso_name       &lt;chr&gt; \"Pantanais Sul Mato-Grossense\", \"Pantanais Sul Mato-Grossense\", \"Centro Norte De Mato Grosso Do Sul\", \"Centro Norte De Mato Grosso Do Sul\", \"Leste…\n#&gt; $ state_code      &lt;dbl&gt; 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50…\n#&gt; $ state_name      &lt;chr&gt; \"Mato Grosso Do Sul\", \"Mato Grosso Do Sul\", \"Mato Grosso Do Sul\", \"Mato Grosso Do Sul\", \"Mato Grosso Do Sul\", \"Mato Grosso Do Sul\", \"Mato Grosso D…\n#&gt; $ region_code     &lt;dbl&gt; 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5,…\n#&gt; $ region_name     &lt;chr&gt; \"Centre-West\", \"Centre-West\", \"Centre-West\", \"Centre-West\", \"Centre-West\", \"Centre-West\", \"Centre-West\", \"Centre-West\", \"Centre-West\", \"Centre-Wes…\n#&gt; $ biome_code      &lt;dbl&gt; 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 6, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 6, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 6, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 6, 3, 3, 2, 2, 2,…\n#&gt; $ biome_name      &lt;chr&gt; \"Pantanal\", \"Pantanal\", \"Cerrado\", \"Cerrado\", \"Cerrado\", \"Cerrado\", \"Cerrado\", \"Cerrado\", \"Cerrado\", \"Cerrado\", \"Atlantic Rainforest\", \"Pantanal\",…\n#&gt; $ ecozone_code    &lt;dbl&gt; 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 8, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 8, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 8, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 8, 3, 3, 2, 2, 2,…\n#&gt; $ ecozone_name    &lt;chr&gt; \"Pantanal\", \"Pantanal\", \"Cerrado\", \"Cerrado\", \"Cerrado\", \"Cerrado\", \"Cerrado\", \"Cerrado\", \"Cerrado\", \"Cerrado\", \"S Atlantic Rainforest\", \"Pantanal…\n#&gt; $ main_climate    &lt;chr&gt; \"AW\", \"AM\", \"AW\", \"AM\", \"AM\", \"AW\", \"AM\", \"AW\", \"AF\", \"CFA\", \"CFA\", \"AW\", \"AM\", \"AW\", \"AM\", \"AM\", \"AW\", \"AM\", \"AW\", \"AF\", \"CFA\", \"CFA\", \"AW\", \"AM\"…\n#&gt; $ month           &lt;dbl&gt; 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 5, 5, 5, 5, 5,…\n#&gt; $ year            &lt;dbl&gt; 2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000, 20…\n#&gt; $ time            &lt;dbl&gt; 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 5, 5, 5, 5, 5,…\n#&gt; $ dengue_cases    &lt;dbl&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA…\n#&gt; $ population      &lt;dbl&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA…\n#&gt; $ pop_density     &lt;dbl&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA…\n#&gt; $ tmax            &lt;dbl&gt; 34.28429, 33.15394, 32.31370, 31.23787, 31.19907, 32.12062, 31.67418, 31.42584, 33.35522, 31.53561, 31.59908, 33.37863, 32.83702, 32.13290, 31.537…\n#&gt; $ tmin            &lt;dbl&gt; 24.00583, 23.43257, 22.61425, 21.82709, 21.29000, 21.85358, 22.03971, 21.71142, 23.22608, 21.63477, 21.51721, 23.21109, 22.73544, 21.81151, 21.168…\n#&gt; $ pdsi            &lt;dbl&gt; -1.23299623, -1.85649669, -0.72018290, -2.39796877, -0.20565207, -1.50169408, -2.48268366, -3.26624393, -3.05362844, -3.60814834, -3.65085363, -1.…\n#&gt; $ urban           &lt;dbl&gt; 88.31, 72.36, 84.51, 94.71, 87.29, 85.58, 84.16, 78.50, 78.59, 81.81, 73.65, 88.31, 72.36, 84.51, 94.71, 87.29, 85.58, 84.16, 78.50, 78.59, 81.81,…\n#&gt; $ water_network   &lt;dbl&gt; 88.78, 79.59, 84.29, 88.13, 86.48, 65.80, 83.69, 81.68, 80.51, 77.45, 76.66, 88.78, 79.59, 84.29, 88.13, 86.48, 65.80, 83.69, 81.68, 80.51, 77.45,…\n#&gt; $ water_shortage  &lt;dbl&gt; 0.0000, 0.1528, 0.0437, 0.1855, 0.3201, 0.1921, 0.0524, 0.2444, 0.1247, 0.2095, 0.1419, 0.0000, 0.1528, 0.0437, 0.1855, 0.3201, 0.1921, 0.0524, 0.…\n#&gt; $ date            &lt;date&gt; 2000-01-01, 2000-01-01, 2000-01-01, 2000-01-01, 2000-01-01, 2000-01-01, 2000-01-01, 2000-01-01, 2000-01-01, 2000-01-01, 2000-01-01, 2000-02-01, 2…\nIn this data frame, the date column contains the temporal identifier (in this case, we have monthly data where the variable date represents the first day of the month) and the spatial unit identifier is micro_code.\nSince we have data for several spatial units, it is useful to have the polygon geometries of the areas (e.g., a geopackage, shapefile o geojson file), loaded as an sf object, in order to plot cartographic representations. The sf object must also contain the area unit identifier to be able to link the geometries with the data frame.\nFor the dengue_MS, the geometries are already included in the package in the map_MS object:\ndata(\"map_MS\")\nglimpse(map_MS)\n#&gt; Rows: 11\n#&gt; Columns: 2\n#&gt; $ code     &lt;dbl&gt; 50001, 50002, 50003, 50004, 50005, 50006, 50007, 50008, 50009, 50010, 50011\n#&gt; $ geometry &lt;MULTIPOLYGON [°]&gt; MULTIPOLYGON (((-55.60618 -..., MULTIPOLYGON (((-55.39862 -..., MULTIPOLYGON (((-53.68353 -..., MULTIPOLYGON (((-53.98856 -..., MULTIPOLYGON (((-53.07228…\nIn map_MS, the code variable corresponds to the micro_code area identifier in the dengue_MS object.\n\n💡 Tip: If you don’t have geometries for your data, a good place to look for them is GADM, natural earth, or GeoBoundaries."
  },
  {
    "objectID": "docs/GHRexplore/GHRexplore-vignette.html#covariates-case-counts-and-incidence-rates",
    "href": "docs/GHRexplore/GHRexplore-vignette.html#covariates-case-counts-and-incidence-rates",
    "title": "GHRexplore tutorial",
    "section": "",
    "text": "In all GHRexplore functions, the column name of the variable to be plotted needs to be specified with the var argument. Plotting functions behave differently depending on the type of data being plotted as defined by the type argument: covariates (type='cov'), case counts (type='counts'), and incidence rates (type='inc'). Several examples for each type are provided in the following sections.\nTo plot incidence rates, the column with the disease counts must be used as var and the population must be also supplied as the pop argument. By default, rates are computed per 100,000 persons, but this number can be changed using the pt argument."
  },
  {
    "objectID": "docs/GHRexplore/GHRexplore-vignette.html#spatial-and-temporal-aggregations",
    "href": "docs/GHRexplore/GHRexplore-vignette.html#spatial-and-temporal-aggregations",
    "title": "GHRexplore tutorial",
    "section": "",
    "text": "Most GHRexplore functions support temporal and spatial aggregations from finer to coarser resolution. For example, you can aggregate daily to weekly data, or aggregate small regions to larger regions.\nTemporal and spatial aggregations are performed using the arguments aggregate_time and aggregate_space, respectively. For covariates (type='cov'), the aggregation function can be specified using aggregate_space_fun and aggregate_time_fun (options include mean (default), median, and sum). For case counts and incidence, the aggregation function is fixed to be the sum of cases."
  },
  {
    "objectID": "docs/GHRexplore/GHRexplore-vignette.html#color-palettes",
    "href": "docs/GHRexplore/GHRexplore-vignette.html#color-palettes",
    "title": "GHRexplore tutorial",
    "section": "",
    "text": "In GHRexplore, color is controlled by the palette argument. We included a few in-house palettes that are used as defaults depending on the plot type:\nGHR_palettes()\n\nIn addition to these, all color palettes included in the packages RColorBrewer and colorspace can also be used. All available options can be checked by running RColorBrewer::display.brewer.all() and colorspace::hcl_palettes(plot=TRUE).\nAs a few examples, the ‘Blues’ palette can be useful when plotting precipitation-related variables, ‘Greens’ when plotting vegetation-related variables, or ‘Blue-Red’ when displaying temperature. When a single color is needed, a color in colors() or a hex code can also be specified. In addition, the user can provide custom palettes using a vector of hex codes to the palette argument.\n\n💡 Tip: Palettes can be reversed by preceding them with a minus sign, e.g. ‘-IDE1’."
  },
  {
    "objectID": "docs/GHRexplore/GHRexplore-vignette.html#time-series",
    "href": "docs/GHRexplore/GHRexplore-vignette.html#time-series",
    "title": "GHRexplore tutorial",
    "section": "Time series",
    "text": "Time series\nplot_timeseries produces time series plots of covariates, case counts, or incidence rates. It allows for spatial and temporal aggregations, plotting single or multiple time series of different areas simultaneously (using facets or colors), y-axis transformations, and axis and title labeling.\nWe start by plotting the time series data for minimum temperature (note type=\"cov\") for all the 11 areas in dengue_MS:\nplot_timeseries(dengue_MS, var = \"tmin\", type = \"cov\", \n                var_label = \"Minimum temp.\",\n                time = \"date\", area = \"micro_code\")\n\nSince 11 areas are quite a lot for a single graph, we can use facet = TRUE to display them in different panels:\nplot_timeseries(dengue_MS, var = \"tmin\", type = \"cov\", var_label = \"Minimum temp.\",\n                time = \"date\", area = \"micro_code\", facet = TRUE)\n\nAnother possible strategy is to keep the 11 areas, but highlight the one we are interested in using the highlight argument by setting it to the area identifier we want to highlight:\nplot_timeseries(dengue_MS, var = \"tmin\", type = \"cov\", var_label = \"Minimum temp.\",\n                time = \"date\", area = \"micro_code\", highlight = \"50001\",\n                title = \"Micro code 50001\")\n\nAs an alternative option, we could also aggregate to a coarser spatial unit by using an aggregation function. Here, we aggregate to meso areas using the aggregate_space argument. Since type=\"cov\", it will aggregate temperatures using the mean as a default.\nplot_timeseries(dengue_MS, var = \"tmin\", type = \"cov\", var_label = \"Minimum temp.\",\n                time = \"date\", area = \"micro_code\", aggregate_space = \"meso_code\")\n\nAfter temperature, we move on to plotting dengue counts (note type=\"counts\") aggregating to meso areas using aggregate_space, which applies a sum function by default when type=\"counts\". Given the right-skewed distribution of the counts, we scale the y axis using a log10(x+1) transformation:\nplot_timeseries(dengue_MS, var = \"dengue_cases\", type = \"counts\",\n                time = \"date\", area = \"micro_code\", aggregate_space = \"meso_code\",\n                transform = \"log10p1\")\n\nIn a similar fashion, we can also plot incidence rates (note type=\"inc\" and the defined pop argument) aggregating to meso areas using aggregate_space, which for type=\"inc\" it first sums the cases per area, and then computes the incidence rates. We set the scale of the incidence rate (pt argument) to 1,000 persons, and scale the y axis using a log10(x+1) transformation:\nplot_timeseries(dengue_MS, var = \"dengue_cases\", type = \"inc\", pop = \"population\",\n                time = \"date\", area = \"micro_code\", aggregate_space = \"meso_code\",\n                pt = 1000, transform = \"log10p1\")"
  },
  {
    "objectID": "docs/GHRexplore/GHRexplore-vignette.html#heatmap",
    "href": "docs/GHRexplore/GHRexplore-vignette.html#heatmap",
    "title": "GHRexplore tutorial",
    "section": "Heatmap",
    "text": "Heatmap\nplot_heatmap plots time series heatmaps of covariates, case counts, or incidence rates. Years are displayed on the y axis and weeks or months on the x axis. The function allows for spatial and temporal aggregations, plotting single or multiple time series for different areas simultaneously (using facets), color transformations, and axis and title labeling.\nIn this first example, we plot the variable (note type=\"cov\") PDSI (Palmer Drought Severity Index) aggregated at the meso code level. We use a suitable palette for drought and we center it at zero:\nplot_heatmap(dengue_MS, var = \"pdsi\", type = \"cov\", var_label = \"PDSI\",\n             time = \"date\", area = \"micro_code\",\n             aggregate_space = \"meso_code\", palette = \"-Vik\", centering = 0) \n\nIn this second example, we plot dengue incidence rates (note type=\"inc\" and pop arguments) at the meso code level and apply a transformation to the color gradient to have a better contrast.\nplot_heatmap(dengue_MS, var = \"dengue_cases\", type = \"inc\", pop = \"population\",\n             time = \"date\", area = \"micro_code\", aggregate_space = \"meso_code\",\n             title= \"Monthly Incidence\", transform = \"log10p1\")"
  },
  {
    "objectID": "docs/GHRexplore/GHRexplore-vignette.html#seasonality",
    "href": "docs/GHRexplore/GHRexplore-vignette.html#seasonality",
    "title": "GHRexplore tutorial",
    "section": "Seasonality",
    "text": "Seasonality\nplot_seasonality produces yearly time series of covariates, case counts, or incidence rates to explore seasonality patterns. Months/weeks are shown on the x axis, the magnitude of the variable on the y axis, and years are represented as colors. The function allows for spatial and temporal aggregations, plotting single or multiple time series of different areas simultaneously (using facets), axis transformations, and axis and title labeling.\nIn this example, we explore the seasonal patterns of minimum temperature aggregated at the meso code level.\nplot_seasonality(dengue_MS, var = \"tmin\", var_label = \"Minimum temperature\",\n                 type = \"cov\", time = \"date\", area = \"micro_code\",   \n                 aggregate_space = \"meso_code\")"
  },
  {
    "objectID": "docs/GHRexplore/GHRexplore-vignette.html#map",
    "href": "docs/GHRexplore/GHRexplore-vignette.html#map",
    "title": "GHRexplore tutorial",
    "section": "Map",
    "text": "Map\nplot_map plots choropleth maps of covariates, case counts, or incidence rates. In this function, we also need to supply the sf object containing the polygon geometries in the map argument. We can use the map_area argument to specify the column in the sf object that contains the area identifiers to be merged to the area column of the data frame specified in data.\nplot_map allows for temporal aggregations (by year or across all years), color transformations, centering and binning (current options include quantiles and equal area), as well as title labeling. It can plot both numerical and categorical variables.\nIn this first example, we plot average urbanicity levels (note type=\"cov\") over the entire study period while using an inverted palette:\nplot_map(data = dengue_MS, var = \"urban\",  time = \"date\", type = \"cov\", area = \"micro_code\",  \n         map = map_MS, map_area = \"code\", by_year = FALSE, var_label= \"Urbanicity\",\n         palette = \"-Heat\")\n\nWe now plot case incidence per 1,000 persons (note type=\"inc\" and pt=1000) for every year (by_year=TRUE) and binning into 5 categories using the quantile method (see bins and bins_method arguments).\nplot_map(dengue_MS, var = \"dengue_cases\", type = \"inc\", pop = \"population\", \n         pt = 1000, time = \"date\", area = \"micro_code\",  \n         map = map_MS, map_area = \"code\", by_year = TRUE, \n         bins = 5, bins_method = \"quantile\", palette = \"-Rocket\")  \n\nLastly, here is one example with the categorical, time-invariant biome covariate:\nplot_map(data = dengue_MS, var = \"biome_name\", type = \"cov\",\n         time = \"date\", area = \"micro_code\", by_year = FALSE,\n         map = map_MS, map_area = \"code\", var_label= \"Biome\")"
  },
  {
    "objectID": "docs/GHRexplore/GHRexplore-vignette.html#bivariate",
    "href": "docs/GHRexplore/GHRexplore-vignette.html#bivariate",
    "title": "GHRexplore tutorial",
    "section": "Bivariate",
    "text": "Bivariate\nplot_bivariate allows the visually assessment of associations between two variables. It will be a scatter plot if both variables are numeric and box plots if one of them is categorical. Options for customization include grouping by a variable using color or facets (area argument) and axis and title labeling.\nIn this first example, we explore the relationship between maximum temperature and drought while grouping by meso code:\nplot_bivariate(dengue_MS, \n               var = c(\"tmax\", \"pdsi\"), \n               var_label = c(\"Max. temp\", \"PDSI\"),\n               area = \"meso_code\")\n\nNext, we do the same but grouping using facets with free scales:\nplot_bivariate(dengue_MS, \n               var = c(\"tmax\", \"pdsi\"), \n               var_label = c(\"Max. temp\", \"PDSI\"),\n               area = \"meso_code\", \n               facet = TRUE, free_x_scale = TRUE, free_y_scale = TRUE)\n\nLastly, we explore the distribution of minimum temperature and the categorical variable biome while coloring by meso code:\nplot_bivariate(dengue_MS, \n               var = c(\"biome_name\", \"tmax\"), \n               var_label = c(\"Biome\", \"Max. temp\"),\n               area = \"meso_code\")"
  },
  {
    "objectID": "docs/GHRexplore/GHRexplore-vignette.html#correlation",
    "href": "docs/GHRexplore/GHRexplore-vignette.html#correlation",
    "title": "GHRexplore tutorial",
    "section": "Correlation",
    "text": "Correlation\nplot_correlation plots a correlation matrix of a set of variables. By default, Pearson correlation is computed, and circles are used to depict correlation values in the lower triangle and the diagonal of the matrix, whereas numbering is used in the upper triangle:\nplot_correlation(dengue_MS, \n                 var = c(\"dengue_cases\",\"pop_density\", \"tmax\", \"tmin\",\n                         \"pdsi\", \"urban\", \"water_network\", \"water_shortage\")) \n\nIn this second example, we use Spearman correlation and customize the triangles and the palette.\nplot_correlation(dengue_MS, var = c(\"dengue_cases\",\"pop_density\", \"tmax\", \"tmin\",\n                                    \"pdsi\", \"urban\", \"water_network\", \"water_shortage\"),  \n                 method = \"spearman\", plot_type = c(\"number\", \"raster\"),\n                 palette = \"RdBu\") \n\nCustom labels for the variables can be provided using the var_label argument."
  },
  {
    "objectID": "docs/GHRexplore/GHRexplore-vignette.html#compare",
    "href": "docs/GHRexplore/GHRexplore-vignette.html#compare",
    "title": "GHRexplore tutorial",
    "section": "Compare",
    "text": "Compare\nplot_compare allows the visualization of several variables in the same figure using the same GHRexplore plotting function. Possible functions include plot_timeseries, plot_heatmap, plot_seasonality and plot_map.\nIn plot_compare, the var, var_lab, type and palette can be vectors of the same length that refer to each of the elements to be plotted, while some other elements, like pop, pt, time, area and aggregation functions are shared. The final display of the multiple plots is automatically done via the cowplot package, and several options to arrange the figures are available (see ?plot_combine) including all arguments of cowplot::plot_grid.\nIn this first example, we plot the time series of PDSI and dengue incidence as a single column and combine the legends (ncol=1, combine_legend=TRUE):\nplot_compare(plot_function = plot_timeseries,\n             data = dengue_MS, \n             var = c(\"pdsi\", \"dengue_cases\"),\n             type = c(\"cov\", \"inc\"), \n             var_lab = c(\"PDSI\", \"Dengue Incidence\"),\n             pop = \"population\",\n             time = \"date\", \n             area = \"micro_code\", \n             aggregate_space = \"meso_code\",\n             ncol=1, \n             combine_legend=TRUE)\n\nIn this second example, we plot heatmaps of PDSI and dengue incidence using different palettes:\nplot_compare(plot_function = plot_heatmap,\n             data = dengue_MS, \n             var = c(\"pdsi\", \"dengue_cases\"),\n             type = c(\"cov\", \"inc\"), \n             var_lab = c(\"PDSI\", \"Incidence\"),\n             palette = c(\"Purp\", \"Reds\"), \n             pop = \"population\",\n             time = \"date\", \n             area = \"micro_code\", \n             aggregate_space = \"meso_code\",\n             ncol=1)"
  },
  {
    "objectID": "docs/GHRmodel/GHRmodel.html",
    "href": "docs/GHRmodel/GHRmodel.html",
    "title": "Overview",
    "section": "",
    "text": "Under construction.\n\n\n\n Back to top"
  },
  {
    "objectID": "docs/clim4health/clim4health.html",
    "href": "docs/clim4health/clim4health.html",
    "title": "Overview",
    "section": "",
    "text": "Under construction.\n\n\n\n Back to top"
  },
  {
    "objectID": "docs/data4health/data4health.html",
    "href": "docs/data4health/data4health.html",
    "title": "Overview",
    "section": "",
    "text": "Under construction.\n\n\n\n Back to top"
  },
  {
    "objectID": "docs/data4health/data4health-vignette1.html",
    "href": "docs/data4health/data4health-vignette1.html",
    "title": "Tutorial",
    "section": "",
    "text": "Under construction.\n\n\n\n Back to top"
  },
  {
    "objectID": "docs/clim4health/clim4health-vignette1.html",
    "href": "docs/clim4health/clim4health-vignette1.html",
    "title": "Tutorial",
    "section": "",
    "text": "Under construction.\n\n\n\n Back to top"
  },
  {
    "objectID": "docs/GHRmodel/GHRmodel-vignette1.html",
    "href": "docs/GHRmodel/GHRmodel-vignette1.html",
    "title": "Tutorial",
    "section": "",
    "text": "Under construction.\n\n\n\n Back to top"
  },
  {
    "objectID": "docs/GHRexplore/GHRexplore.html#description",
    "href": "docs/GHRexplore/GHRexplore.html#description",
    "title": "GHRexplore overview",
    "section": "Description",
    "text": "Description\n\n\nGHRexplore is an R package for exploratory analysis of temporal and spatio-temporal health data including case counts, incidence rates, and covariates. It provides commonly used visualizations and supports standard data transformations such as temporal and spatial aggregations. The package also offers extensive customization options for the resulting figures. Currently available plotting functions include:\n\n\n\n\n\n\n\nplot_timeseries: Plots time series of covariates, case counts or incidence rates.\nplot_heatmap: Plots a time series of covariates, case counts or incidence rates as heatmaps.\nplot_seasonality: Plots yearly time series to detect seasonal patterns of covariates, case counts or incidence rates.\nplot_correlation: Plots a correlation matrix of a series of variables.\nplot_map: Plots a choropleth map of covariates, case counts or incidence rates.\nplot_bivariate: Plots a bivariate plot of two numerical and/or categorical variables.\nplot_multiple, plot_combine and plot_compare: Used to generate graphs of several variables at the same time.\n\nGHRexplore is one of the packages developed by the Global Health Resilience (GHR) team at the Barcelona Supercomputing Center (BSC) within the IDExtremes project. The development version of the package can be found on gitlab."
  },
  {
    "objectID": "docs/GHRexplore/GHRexplore.html#installation",
    "href": "docs/GHRexplore/GHRexplore.html#installation",
    "title": "GHRexplore overview",
    "section": "Installation",
    "text": "Installation\n# Install from CRAN\ninstall.packages(\"GHRexplore\")\n\n# Get the development version from Gitlab\ndevtools::install_git('https://earth.bsc.es/gitlab/ghr/ghrexplore.git')"
  },
  {
    "objectID": "docs/GHRexplore/GHRexplore.html#usage",
    "href": "docs/GHRexplore/GHRexplore.html#usage",
    "title": "GHRexplore overview",
    "section": "Usage",
    "text": "Usage\nlibrary(\"GHRexplore\")\n\n# Use data included in the package to plot a heatmap with spatial aggregation\ndata(\"dengue_MS\")\nplot_heatmap(data = dengue_MS,\n             var = \"dengue_cases\",\n             type = \"inc\",\n             pop = \"population\",\n             time = \"date\",          \n             area = \"micro_code\",   \n             aggregate_space = \"meso_code\",\n             transform = \"log10p1\",\n             title = \"Dengue incidence in Brazil\")"
  },
  {
    "objectID": "docs/GHRexplore/GHRexplore.html#developers",
    "href": "docs/GHRexplore/GHRexplore.html#developers",
    "title": "GHRexplore overview",
    "section": "Developers",
    "text": "Developers\nGiovenale Moirano, PhD \nBarcelona Supercomputing Center\nGlobal Health Resilience\nCarles Milà, PhD \nBarcelona Supercomputing Center\nGlobal Health Resilience\nAnna B. Kawiecki, PhD \nBarcelona Supercomputing Center\nGlobal Health Resilience\nRachel Lowe, PhD \nBarcelona Supercomputing Center\nGlobal Health Resilience (Group leader)"
  },
  {
    "objectID": "docs/GHRpredict/GHRpredict-vignette1.html",
    "href": "docs/GHRpredict/GHRpredict-vignette1.html",
    "title": "Tutorial",
    "section": "",
    "text": "Under construction.\n\n\n\n Back to top"
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "Back to top"
  }
]